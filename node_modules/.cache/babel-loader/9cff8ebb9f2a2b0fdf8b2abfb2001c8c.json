{"ast":null,"code":"var _jsxFileName = \"/Users/ryanxu/Documents/Coding/the-app/client/src/Pages/Apps/ToDoList/TheToDoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport * as ApiClient from \"../../../ApiClient\";\nimport HomeButton from \"../../../Components/HomeButton\";\nimport ListContainer from \"./Components/ListContainer\";\nimport \"./ToDoList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TheToDoList = () => {\n  _s();\n\n  const [toCompleteList, setToCompleteList] = useState([]);\n  const [todaysList, setTodaysList] = useState([]);\n  const [completedList, setCompletedList] = useState([]);\n  useEffect(() => {\n    ApiClient.getTasks().then(response => {\n      console.log(response);\n      const data = response.data;\n      const unsortedToCompleteList = [];\n      const unsortedTodaysList = [];\n      const unsortedCompletedList = [];\n\n      for (let i = 0; i < data.length; i++) {\n        switch (data[i].listId) {\n          case 1:\n            unsortedToCompleteList.push(data[i]);\n            break;\n\n          case 2:\n            unsortedTodaysList.push(data[i]);\n            break;\n\n          case 3:\n            unsortedCompletedList.push(data[i]);\n            break;\n        }\n      }\n\n      setToCompleteList(sortArray(unsortedToCompleteList));\n      setTodaysList(sortArray(unsortedTodaysList));\n      setCompletedList(sortArray(unsortedCompletedList));\n    });\n  }, []);\n\n  const sortArray = data => {\n    const sortedList = data.sort((a, b) => a.indexCol - b.indexCol);\n    return sortedList;\n  };\n\n  const createNewTask = listId => {\n    let indexCol = 0;\n    let existingTasks = [];\n\n    switch (listId) {\n      case 1:\n        indexCol = toCompleteList.length;\n        existingTasks = [...toCompleteList];\n        break;\n\n      case 2:\n        indexCol = todaysList.length;\n        existingTasks = [...todaysList];\n        break;\n\n      case 3:\n        indexCol = completedList.length;\n        existingTasks = [...completedList];\n        break;\n    }\n\n    ;\n    ApiClient.createNewTask(indexCol, listId).then(response => {\n      console.log(response);\n      const newArray = [...existingTasks, {\n        id: response,\n        task: null,\n        description: null,\n        isOpen: 1,\n        indexCol: indexCol,\n        listId: listId\n      }];\n      console.log(newArray);\n\n      switch (listId) {\n        case 1:\n          setToCompleteList(newArray);\n          break;\n\n        case 2:\n          setTodaysList(newArray);\n          break;\n\n        case 3:\n          setCompletedList(newArray);\n          break;\n      }\n    });\n  };\n\n  const handleUpdate = (id, task) => {\n    const index = toCompleteList.findIndex(todo => todo.id === id);\n    const newArray = toCompleteList;\n    newArray[index].task = task;\n    setToCompleteList(newArray);\n  };\n\n  const handleDelete = (id, index, listId) => {\n    console.log(id);\n    ApiClient.deleteTask(id, index, listId);\n    const newArray = toCompleteList.filter(todo => todo.id !== id);\n    setToCompleteList(newArray);\n  };\n\n  const handleShift = (id, direction) => {\n    var current = -1;\n\n    for (let i = 0; i < toCompleteList.length; i++) {\n      if (toCompleteList[i].id === id) {\n        current = i;\n      }\n    }\n\n    const newArray = [...toCompleteList];\n    const temp = newArray[current];\n\n    if (direction === \"moveUp\") {\n      if (current === 0) {\n        console.log(\"first element!\");\n      } else {\n        console.log(newArray);\n        ApiClient.swapTaskIndex(newArray[current].id, newArray[current - 1].id, current, current - 1);\n        newArray[current] = newArray[current - 1];\n        newArray[current - 1] = temp;\n        newArray[current].isOpen = 0;\n        newArray[current - 1].isOpen = 1;\n        newArray[current].indexCol--;\n        newArray[current - 1].indexCol++;\n      }\n    } else {\n      if (current === toCompleteList.length - 1) {\n        console.log(\"last element!\");\n      } else {\n        ApiClient.swapTaskIndex(newArray[current].id, newArray[current + 1].id, current, current + 1);\n        newArray[current] = newArray[current + 1];\n        newArray[current + 1] = temp;\n        newArray[current].isOpen = 0;\n        newArray[current + 1].isOpen = 1;\n        newArray[current].indexCol++;\n        newArray[current + 1].indexCol--;\n      }\n    }\n\n    setToCompleteList(newArray);\n  };\n\n  const updateSwitch = (action, id, task, listId) => {\n    console.log(action, id, task, listId);\n\n    switch (action) {\n      case \"add\":\n        createNewTask(listId);\n        break;\n\n      case \"update\":\n        handleUpdate(id, task);\n        break;\n\n      case \"delete\":\n        handleDelete(id, task, listId);\n        break;\n\n      case \"moveUp\":\n        handleShift(id, \"moveUp\");\n        break;\n\n      case \"moveDown\":\n        handleShift(id, \"moveDown\");\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HomeButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Title\",\n        style: {\n          padding: 0\n        },\n        children: \"the To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => console.log(toCompleteList),\n      children: \"a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"To-Do-Lists\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ListContainer, {\n          listId: 1,\n          listName: \"TO COMPLETE\",\n          data: toCompleteList,\n          updateState: updateSwitch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ListContainer, {\n          listId: 2,\n          listName: \"FOR TODAY\",\n          data: todaysList,\n          updateState: updateSwitch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ListContainer, {\n          listId: 3,\n          listName: \"COMPLETED\",\n          data: completedList,\n          updateState: updateSwitch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TheToDoList, \"pm9MiahO4+jUzeOEmzbllkT/m98=\");\n\n_c = TheToDoList;\nexport default TheToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TheToDoList\");","map":{"version":3,"sources":["/Users/ryanxu/Documents/Coding/the-app/client/src/Pages/Apps/ToDoList/TheToDoList.js"],"names":["React","useEffect","useState","ApiClient","HomeButton","ListContainer","TheToDoList","toCompleteList","setToCompleteList","todaysList","setTodaysList","completedList","setCompletedList","getTasks","then","response","console","log","data","unsortedToCompleteList","unsortedTodaysList","unsortedCompletedList","i","length","listId","push","sortArray","sortedList","sort","a","b","indexCol","createNewTask","existingTasks","newArray","id","task","description","isOpen","handleUpdate","index","findIndex","todo","handleDelete","deleteTask","filter","handleShift","direction","current","temp","swapTaskIndex","updateSwitch","action","padding","e"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport * as ApiClient from \"../../../ApiClient\";\nimport HomeButton from \"../../../Components/HomeButton\";\nimport ListContainer from \"./Components/ListContainer\";\n\nimport \"./ToDoList.css\";\n\nconst TheToDoList = () => {\n\n  const [toCompleteList, setToCompleteList] = useState([]);\n  const [todaysList, setTodaysList] = useState([]);\n  const [completedList, setCompletedList] = useState([]);\n\n  useEffect(() => {\n    ApiClient.getTasks().then((response) => {\n      console.log(response);\n\n      const data = response.data;\n      const unsortedToCompleteList = []\n      const unsortedTodaysList = []\n      const unsortedCompletedList = []\n\n      for (let i = 0; i < data.length; i++) {\n          switch (data[i].listId) {\n            case 1:\n              unsortedToCompleteList.push(data[i]);\n              break;\n            case 2:\n              unsortedTodaysList.push(data[i]);\n              break;\n            case 3: \n              unsortedCompletedList.push(data[i]);\n              break;\n          }\n      }\n\n      setToCompleteList(sortArray(unsortedToCompleteList));\n      setTodaysList(sortArray(unsortedTodaysList));\n      setCompletedList(sortArray(unsortedCompletedList));\n    });\n  }, []);\n\n  const sortArray = (data) => {\n      const sortedList = data.sort((a, b) => a.indexCol - b.indexCol);\n      return sortedList;\n  }\n\n  const createNewTask = (listId) => { \n   \n    \n    let indexCol = 0;\n    let existingTasks = []\n\n    switch(listId) {\n      case 1:\n        indexCol = toCompleteList.length;\n        existingTasks = [...toCompleteList];\n        break;\n      case 2:\n        indexCol = todaysList.length;\n        existingTasks = [...todaysList];\n        break;\n      case 3:\n        indexCol = completedList.length;\n        existingTasks = [...completedList];\n        break;\n    };\n\n    ApiClient.createNewTask(indexCol, listId).then(\n      response => {\n      console.log(response);\n      const newArray = [...existingTasks, {\n        id: response,\n        task: null, \n        description: null, \n        isOpen: 1,\n        indexCol: indexCol,\n        listId: listId\n      }];\n      \n      console.log(newArray);\n      switch(listId) {\n        case 1:\n          setToCompleteList(newArray);\n          break;\n        case 2:\n          setTodaysList(newArray);\n          break;\n        case 3:\n          setCompletedList(newArray);\n          break;\n      }\n    });\n    \n  };  \n\n  const handleUpdate = (id, task) => {\n    const index = toCompleteList.findIndex(todo => todo.id === id)\n\n    const newArray = toCompleteList;\n    newArray[index].task = task;\n\n    setToCompleteList(newArray);\n  }\n\n  const handleDelete = (id, index, listId) => {\n    console.log(id)\n    ApiClient.deleteTask(id, index, listId);\n    const newArray = toCompleteList.filter(todo => todo.id !== id);\n    setToCompleteList(newArray);\n  }\n  \n  const handleShift = (id, direction) => {\n\n    var current = -1;\n    for (let i = 0; i < toCompleteList.length; i++) {\n      if (toCompleteList[i].id === id) {\n        current = i;\n      }\n    }\n\n    const newArray = [...toCompleteList];\n    const temp = newArray[current];\n    \n    if (direction === \"moveUp\") {\n      if (current === 0) {\n        console.log(\"first element!\")\n      }\n      else {\n        console.log(newArray)\n        ApiClient.swapTaskIndex(newArray[current].id, newArray[current - 1].id, current, current - 1);\n        newArray[current] = newArray[current - 1];\n        newArray[current - 1] = temp;\n        newArray[current].isOpen = 0;\n        newArray[current - 1].isOpen = 1;\n        newArray[current].indexCol--;\n        newArray[current -1].indexCol++;\n      }   \n    }\n\n    else {\n      if (current === toCompleteList.length - 1) {\n        console.log(\"last element!\")\n      }\n      else {\n        ApiClient.swapTaskIndex(newArray[current].id, newArray[current + 1].id, current, current + 1);\n        newArray[current] = newArray[current + 1];\n        newArray[current + 1] = temp;\n        newArray[current].isOpen = 0;\n        newArray[current + 1].isOpen = 1;\n        newArray[current].indexCol++;\n        newArray[current + 1].indexCol--;\n      }\n    }\n\n    setToCompleteList(newArray);\n\n  }\n  const updateSwitch = (action, id, task, listId) => {\n    console.log(action, id, task, listId)\n    switch(action) {\n      \n      case \"add\":\n        createNewTask(listId);\n        break;\n\n      case \"update\":\n        handleUpdate(id, task);\n        break;\n\n      case \"delete\":\n        handleDelete(id, task, listId);\n        break;\n\n      case \"moveUp\":\n        handleShift(id, \"moveUp\");\n        break;\n\n      case \"moveDown\":\n        handleShift(id, \"moveDown\");\n        break;\n    }\n  }\n \n\n  return (\n    <div>\n      <HomeButton />\n      <div className=\"Header\">\n        <h1 className=\"Title\" style={{padding: 0}}>the To-Do List</h1>\n      </div>\n\n      <button onClick={(e) => console.log(toCompleteList)}>a</button>\n\n      <div className=\"To-Do-Lists\">\n        <div>\n          <ListContainer \n            listId={1}\n            listName={\"TO COMPLETE\"}\n            data={toCompleteList}\n            updateState={updateSwitch}\n          />\n        </div>\n        <div>\n        <ListContainer \n            listId={2}\n            listName={\"FOR TODAY\"}\n            data={todaysList}\n            updateState={updateSwitch}\n          />\n        </div>\n        <div>\n        <ListContainer \n            listId={3}\n            listName={\"COMPLETED\"}\n            data={completedList}\n            updateState={updateSwitch}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TheToDoList;"]},"metadata":{},"sourceType":"module"}