{"ast":null,"code":"var _jsxFileName = \"/Users/ryanxu/Documents/Coding/the-app/client/src/Pages/Apps/ToDoList/Components/ToDo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport * as ApiClient from \"../../../../ApiClient\";\nimport \"../new.css\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDo = _ref => {\n  _s();\n\n  let {\n    todo\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const [isDeleted, setIsDeleted] = useState(false);\n  const [updateBar, setUpdateBar] = useState(\"\");\n  const [task, setTask] = useState(todo.task);\n\n  const openOrClose = () => {\n    isOpen ? setIsOpen(false) : setIsOpen(true);\n  };\n\n  const updateTask = async updatedTask => {\n    ApiClient.updateTask(todo.id, updatedTask);\n    const dog = await Axios.get('http://localhost:3001/api/get/last');\n    console.log(dog);\n    setTask(updatedTask);\n    setUpdateBar(\"\");\n    setIsOpen(false);\n  };\n\n  const deleteTask = () => {\n    ApiClient.deleteTask(todo.id);\n    setIsDeleted(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isDeleted ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Open-Card\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"Update-Task\",\n        id: todo.id,\n        onChange: e => {\n          setUpdateBar(e.target.value);\n        },\n        onKeyUp: e => {\n          if (e.key === \"Enter\") {\n            updateTask(updateBar);\n          }\n        },\n        defaultValue: todo.task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Delete-Task\",\n        onClick: deleteTask,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${task == null ? \"Empty-Card\" : \"Closed-Card\"}`,\n      onClick: openOrClose,\n      children: task == null ? 'Untitled' : task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n/** \n*/\n\n\n_s(ToDo, \"k6Aj9lck3zZWiMQfJOUg0AGENyU=\");\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/Users/ryanxu/Documents/Coding/the-app/client/src/Pages/Apps/ToDoList/Components/ToDo.js"],"names":["React","useEffect","useState","ApiClient","Axios","ToDo","todo","isOpen","setIsOpen","isDeleted","setIsDeleted","updateBar","setUpdateBar","task","setTask","openOrClose","updateTask","updatedTask","id","dog","get","console","log","deleteTask","e","target","value","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAO,KAAKC,SAAZ,MAA2B,uBAA3B;AAEA,OAAO,YAAP;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAI,GAAG,QAAY;AAAA;;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AAEvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAACI,IAAI,CAACO,IAAN,CAAhC;;AAEA,QAAME,WAAW,GAAG,MAAM;AACxBR,IAAAA,MAAM,GAAGC,SAAS,CAAC,KAAD,CAAZ,GAAsBA,SAAS,CAAC,IAAD,CAArC;AACD,GAFD;;AAIA,QAAMQ,UAAU,GAAG,MAAOC,WAAP,IAAuB;AACxCd,IAAAA,SAAS,CAACa,UAAV,CAAqBV,IAAI,CAACY,EAA1B,EAA8BD,WAA9B;AACA,UAAME,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAU,oCAAV,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAL,IAAAA,OAAO,CAACG,WAAD,CAAP;AACAL,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAJ,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAPD;;AASA,QAAMe,UAAU,GAAG,MAAM;AACvBpB,IAAAA,SAAS,CAACoB,UAAV,CAAqBjB,IAAI,CAACY,EAA1B;AACAR,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAHD;;AAKA,sBACE;AAAA,cACGD,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA,YADQ,GAGNF,MAAM,gBACN;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,aAFZ;AAGE,QAAA,EAAE,EAAED,IAAI,CAACY,EAHX;AAIE,QAAA,QAAQ,EAAGM,CAAD,IAAO;AAACZ,UAAAA,YAAY,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AAA6B,SAJjD;AAKE,QAAA,OAAO,EAAGF,CAAD,IAAO;AAAC,cAAIA,CAAC,CAACG,GAAF,KAAU,OAAd,EAAuB;AAAEX,YAAAA,UAAU,CAACL,SAAD,CAAV;AAAuB;AAAC,SALpE;AAME,QAAA,YAAY,EAAEL,IAAI,CAACO;AANrB;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAEU,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,gBAaN;AAAQ,MAAA,SAAS,EAAG,GAAEV,IAAI,IAAI,IAAR,GAAe,YAAf,GAA6B,aAAc,EAAjE;AAAoE,MAAA,OAAO,EAAEE,WAA7E;AAAA,gBACGF,IAAI,IAAI,IAAR,GAAe,UAAf,GAA4BA;AAD/B;AAAA;AAAA;AAAA;AAAA;AAjBN;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAnDD;AAoDA;AACA;;;GArDMR,I;;KAAAA,I;AAsDN,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nimport * as ApiClient from \"../../../../ApiClient\";\n\nimport \"../new.css\";\n\nimport Axios from \"axios\";\n\nconst ToDo = ({todo}) => {\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [isDeleted, setIsDeleted] = useState(false);\n  const [updateBar, setUpdateBar] = useState(\"\");\n  const [task, setTask] = useState(todo.task);\n\n  const openOrClose = () => {\n    isOpen ? setIsOpen(false) : setIsOpen(true);\n  };\n\n  const updateTask = async (updatedTask) => {\n    ApiClient.updateTask(todo.id, updatedTask);\n    const dog = await Axios.get('http://localhost:3001/api/get/last')\n    console.log(dog);\n    setTask(updatedTask)\n    setUpdateBar(\"\");\n    setIsOpen(false);\n  };\n\n  const deleteTask = () => {\n    ApiClient.deleteTask(todo.id);\n    setIsDeleted(true);\n  };\n  \n  return (\n    <div>\n      {isDeleted ? \n        <div></div>\n        :\n          isOpen ? \n          <div className=\"Open-Card\"> \n            <input \n              type=\"text\" \n              className=\"Update-Task\"\n              id={todo.id} \n              onChange={(e) => {setUpdateBar(e.target.value)}}\n              onKeyUp={(e) => {if (e.key === \"Enter\") { updateTask(updateBar) }}}\n              defaultValue={todo.task}>\n            </input>\n            <button className=\"Delete-Task\" onClick={deleteTask}>Delete</button>\n          </div>\n          :\n          <button className={`${task == null ? \"Empty-Card\" :\"Closed-Card\"}`} onClick={openOrClose}> \n            {task == null ? 'Untitled' : task}    \n          </button>    \n      }\n      \n    </div>\n   \n  );\n};\n/** \n*/\nexport default ToDo;"]},"metadata":{},"sourceType":"module"}