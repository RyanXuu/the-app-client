{"ast":null,"code":"var _jsxFileName = \"/Users/ryanxu/Documents/Coding/the-app/client/src/Pages/Apps/ToDoList/TheToDoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport * as ApiClient from \"../../../ApiClient\";\nimport HomeButton from \"../../../Components/HomeButton\";\nimport ListContainer from \"./Components/ListContainer\";\nimport data from \"./data.json\";\nimport \"./ToDoList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TheToDoList = () => {\n  _s();\n\n  const [toCompleteList, setToCompleteList] = useState([]);\n  const [todaysList, setTodaysList] = useState([]);\n  const [completedList, setCompletedList] = useState([]);\n  useEffect(() => {\n    ApiClient.getTasks().then(response => {\n      console.log(response);\n      const data = response.data;\n      const unsortedToCompleteList = [];\n      const unsortedTodaysList = [];\n      const unsortedCompletedList = [];\n\n      for (let i = 0; i < data.length; i++) {\n        switch (data[i].list) {\n          case \"TO COMPLETE\":\n            unsortedToCompleteList.push(data[i]);\n            break;\n\n          case \"FOR TODAY\":\n            unsortedTodaysList.push(data[i]);\n            break;\n\n          case \"COMPLETED\":\n            unsortedCompletedList.push(data[i]);\n            break;\n        }\n      }\n\n      setToCompleteList(sortArray(unsortedToCompleteList));\n      setTodaysList(sortArray(unsortedTodaysList));\n      setCompletedList(sortArray(unsortedCompletedList));\n    });\n  }, []);\n\n  const sortArray = data => {\n    const sortedList = data.sort((a, b) => a.indexCol - b.indexCol);\n    return sortedList;\n  };\n\n  const createNewTask = async listId => {\n    const id = await ApiClient.createNewTask();\n    const indexCol = 0;\n\n    switch (listId) {\n      case 1:\n        indexCol = toCompleteList.length;\n        break;\n\n      case 2:\n        indexCol = todaysList.length;\n        break;\n\n      case 3:\n        indexCol = completedList.length;\n        break;\n    }\n\n    const newArray = [...toCompleteList, {\n      id: id,\n      task: null,\n      description: null,\n      isOpen: 1,\n      indexCol: indexCol,\n      listId: listId\n    }];\n    ;\n\n    switch (listId) {\n      case 1:\n        setToCompleteList(newArray);\n        break;\n\n      case 2:\n        setTodaysList(newArray);\n        break;\n\n      case 3:\n        setCompletedList(newArray);\n        '';\n        break;\n    }\n  };\n\n  const handleUpdate = (id, task) => {\n    const index = toCompleteList.findIndex(todo => todo.id === id);\n    const newArray = toCompleteList;\n    newArray[index].task = task;\n    setToCompleteList(newArray);\n  };\n\n  const handleDelete = id => {\n    ApiClient.deleteTask(id);\n    const newArray = toCompleteList.filter(todo => todo.id !== id);\n    setToCompleteList(newArray);\n  };\n\n  const handleShift = (id, direction) => {\n    var current = -1;\n\n    for (let i = 0; i < toCompleteList.length; i++) {\n      if (toCompleteList[i].id === id) {\n        current = i;\n      }\n    }\n\n    const newArray = [...toCompleteList];\n    const temp = newArray[current];\n\n    if (direction === \"moveUp\") {\n      if (current === 0) {\n        console.log(\"first element!\");\n      } else {\n        ApiClient.swapTaskIndex(newArray[current].id, newArray[current - 1].id, current, current - 1);\n        newArray[current] = newArray[current - 1];\n        newArray[current - 1] = temp;\n        newArray[current].isOpen = 0;\n        newArray[current - 1].isOpen = 1;\n      }\n    } else {\n      if (current === toCompleteList.length - 1) {\n        console.log(\"last element!\");\n      } else {\n        ApiClient.swapTaskIndex(newArray[current].id, newArray[current + 1].id, current, current + 1);\n        newArray[current] = newArray[current + 1];\n        newArray[current + 1] = temp;\n        newArray[current].isOpen = 0;\n        newArray[current + 1].isOpen = 1;\n      }\n    }\n\n    setToCompleteList(newArray);\n  };\n\n  const updateSwitch = (action, id, task) => {\n    console.log(action, id, task);\n\n    switch (action) {\n      case \"add\":\n        createNewTask(id);\n        break;\n\n      case \"update\":\n        handleUpdate(id, task);\n        break;\n\n      case \"delete\":\n        handleDelete(id);\n        break;\n\n      case \"moveUp\":\n        handleShift(id, \"moveUp\");\n        break;\n\n      case \"moveDown\":\n        handleShift(id, \"moveDown\");\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HomeButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Title\",\n        style: {\n          padding: 0\n        },\n        children: \"the To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => console.log(toCompleteList),\n      children: \"a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"To-Do-Lists\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ListContainer, {\n          listId: 1,\n          listName: \"TO COMPLETE\",\n          data: toCompleteList,\n          updateState: updateSwitch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ListContainer, {\n          listId: 2,\n          listName: \"FOR TODAY\",\n          data: todaysList,\n          updateState: updateSwitch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ListContainer, {\n          listId: 3,\n          listName: \"COMPLETED\",\n          data: completedList,\n          updateState: updateSwitch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TheToDoList, \"pm9MiahO4+jUzeOEmzbllkT/m98=\");\n\n_c = TheToDoList;\nexport default TheToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TheToDoList\");","map":{"version":3,"sources":["/Users/ryanxu/Documents/Coding/the-app/client/src/Pages/Apps/ToDoList/TheToDoList.js"],"names":["React","useEffect","useState","ApiClient","HomeButton","ListContainer","data","TheToDoList","toCompleteList","setToCompleteList","todaysList","setTodaysList","completedList","setCompletedList","getTasks","then","response","console","log","unsortedToCompleteList","unsortedTodaysList","unsortedCompletedList","i","length","list","push","sortArray","sortedList","sort","a","b","indexCol","createNewTask","listId","id","newArray","task","description","isOpen","handleUpdate","index","findIndex","todo","handleDelete","deleteTask","filter","handleShift","direction","current","temp","swapTaskIndex","updateSwitch","action","padding","e"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport * as ApiClient from \"../../../ApiClient\";\nimport HomeButton from \"../../../Components/HomeButton\";\nimport ListContainer from \"./Components/ListContainer\";\nimport data from \"./data.json\";\n\nimport \"./ToDoList.css\";\n\nconst TheToDoList = () => {\n\n  const [toCompleteList, setToCompleteList] = useState([]);\n  const [todaysList, setTodaysList] = useState([]);\n  const [completedList, setCompletedList] = useState([]);\n\n  useEffect(() => {\n    ApiClient.getTasks().then((response) => {\n      console.log(response);\n\n      const data = response.data;\n      const unsortedToCompleteList = []\n      const unsortedTodaysList = []\n      const unsortedCompletedList = []\n\n      for (let i = 0; i < data.length; i++) {\n          switch (data[i].list) {\n            case \"TO COMPLETE\":\n              unsortedToCompleteList.push(data[i]);\n              break;\n            case \"FOR TODAY\":\n              unsortedTodaysList.push(data[i]);\n              break;\n            case \"COMPLETED\": \n              unsortedCompletedList.push(data[i]);\n              break;\n          }\n      }\n\n      setToCompleteList(sortArray(unsortedToCompleteList));\n      setTodaysList(sortArray(unsortedTodaysList));\n      setCompletedList(sortArray(unsortedCompletedList));\n    });\n  }, []);\n\n  const sortArray = (data) => {\n      const sortedList = data.sort((a, b) => a.indexCol - b.indexCol);\n      return sortedList;\n  }\n\n  const createNewTask = async (listId) => { \n    const id = await ApiClient.createNewTask();\n    \n    const indexCol = 0;\n\n    switch(listId) {\n      case 1:\n        indexCol = toCompleteList.length;\n        break;\n      case 2:\n        indexCol = todaysList.length;\n        break;\n      case 3:\n        indexCol = completedList.length;\n        break;\n    }\n\n    const newArray = [...toCompleteList, {\n      id: id, \n      task: null, \n      description: null, \n      isOpen: 1,\n      indexCol: indexCol,\n      listId: listId}];\n\n    ;\n\n    switch(listId) {\n      case 1:\n        setToCompleteList(newArray);\n        break;\n      case 2:\n        setTodaysList(newArray);\n        break;\n      case 3:\n        setCompletedList(newArray);''\n        break;\n    }\n  };  \n\n  const handleUpdate = (id, task) => {\n    const index = toCompleteList.findIndex(todo => todo.id === id)\n\n    const newArray = toCompleteList;\n    newArray[index].task = task;\n\n    setToCompleteList(newArray);\n  }\n\n  const handleDelete = (id) => {\n    ApiClient.deleteTask(id);\n    const newArray = toCompleteList.filter(todo => todo.id !== id);\n    setToCompleteList(newArray);\n  }\n  \n  const handleShift = (id, direction) => {\n\n    var current = -1;\n    for (let i = 0; i < toCompleteList.length; i++) {\n      if (toCompleteList[i].id === id) {\n        current = i;\n      }\n    }\n\n    const newArray = [...toCompleteList];\n    const temp = newArray[current];\n    \n    if (direction === \"moveUp\") {\n      if (current === 0) {\n        console.log(\"first element!\")\n      }\n      else {\n        ApiClient.swapTaskIndex(newArray[current].id, newArray[current - 1].id, current, current - 1);\n        newArray[current] = newArray[current - 1];\n        newArray[current - 1] = temp;\n        newArray[current].isOpen = 0;\n        newArray[current - 1].isOpen = 1;\n      }   \n    }\n\n    else {\n      if (current === toCompleteList.length - 1) {\n        console.log(\"last element!\")\n      }\n      else {\n        ApiClient.swapTaskIndex(newArray[current].id, newArray[current + 1].id, current, current + 1);\n        newArray[current] = newArray[current + 1];\n        newArray[current + 1] = temp;\n        newArray[current].isOpen = 0;\n        newArray[current + 1].isOpen = 1;\n      }\n    }\n\n    setToCompleteList(newArray);\n\n  }\n  const updateSwitch = (action, id, task) => {\n    console.log(action, id, task)\n    switch(action) {\n      \n      case \"add\":\n        createNewTask(id);\n        break;\n\n      case \"update\":\n        handleUpdate(id, task);\n        break;\n\n      case \"delete\":\n        handleDelete(id);\n        break;\n\n      case \"moveUp\":\n        handleShift(id, \"moveUp\");\n        break;\n\n      case \"moveDown\":\n        handleShift(id, \"moveDown\");\n        break;\n    }\n  }\n \n\n  return (\n    <div>\n      <HomeButton />\n      <div className=\"Header\">\n        <h1 className=\"Title\" style={{padding: 0}}>the To-Do List</h1>\n      </div>\n\n      <button onClick={(e) => console.log(toCompleteList)}>a</button>\n\n      <div className=\"To-Do-Lists\">\n        <div>\n          <ListContainer \n            listId={1}\n            listName={\"TO COMPLETE\"}\n            data={toCompleteList}\n            updateState={updateSwitch}\n          />\n        </div>\n        <div>\n        <ListContainer \n            listId={2}\n            listName={\"FOR TODAY\"}\n            data={todaysList}\n            updateState={updateSwitch}\n          />\n        </div>\n        <div>\n        <ListContainer \n            listId={3}\n            listName={\"COMPLETED\"}\n            data={completedList}\n            updateState={updateSwitch}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TheToDoList;"]},"metadata":{},"sourceType":"module"}