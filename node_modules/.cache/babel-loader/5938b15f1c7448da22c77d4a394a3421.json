{"ast":null,"code":"var _jsxFileName = \"/Users/ryanxu/Documents/Coding/the-app/client/src/Pages/Apps/ToDoList/Components/ToDo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport * as ApiClient from \"../../../../ApiClient\";\nimport \"../new.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDo = _ref => {\n  _s();\n\n  let {\n    todo,\n    updateState,\n    index\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const [updateBar, setUpdateBar] = useState(\"\");\n\n  const openOrClose = () => {\n    isOpen ? setIsOpen(false) : setIsOpen(true);\n  };\n\n  const updateTask = updatedTask => {\n    ApiClient.updateTask(todo.id, updatedTask);\n    updateState(\"update\", todo.id, updatedTask);\n    setUpdateBar(\"\");\n    setIsOpen(false);\n  };\n\n  const handleDelete = () => {\n    updateState(\"delete\", todo.id, null);\n    setIsOpen(false);\n    setUpdateBar(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Draggable, {\n      draggableId: todo.id,\n      index: index,\n      children: provided => {\n        /*#__PURE__*/\n        _jsxDEV(\"div\", { ...provided.draggableProps,\n          ...provided.dragHandleProps,\n          innerRef: provided.innerRef,\n          children: isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Open-Card\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"Update-Task\",\n              id: todo.id,\n              onChange: e => {\n                setUpdateBar(e.target.value);\n              },\n              onKeyUp: e => {\n                if (e.key === \"Enter\") {\n                  updateTask(updateBar);\n                }\n              },\n              onClick: e => {\n                setUpdateBar(todo.task);\n              },\n              defaultValue: todo.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"Delete-Task\",\n              onClick: handleDelete,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `${todo.task == null ? \"Empty-Card\" : \"Closed-Card\"}`,\n              onClick: openOrClose,\n              children: todo.task == null ? 'Untitled' : todo.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), \"innerRef=\", provided.innerRef]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToDo, \"mtXYAphKyjax0TwiRdJPVfFUWRw=\");\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/Users/ryanxu/Documents/Coding/the-app/client/src/Pages/Apps/ToDoList/Components/ToDo.js"],"names":["React","useState","Draggable","ApiClient","ToDo","todo","updateState","index","isOpen","setIsOpen","updateBar","setUpdateBar","openOrClose","updateTask","updatedTask","id","handleDelete","provided","draggableProps","dragHandleProps","innerRef","e","target","value","key","task"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,OAAO,KAAKC,SAAZ,MAA2B,uBAA3B;AAEA,OAAO,YAAP;;;AAEA,MAAMC,IAAI,GAAG,QAAgC;AAAA;;AAAA,MAA/B;AAACC,IAAAA,IAAD;AAAOC,IAAAA,WAAP;AAAoBC,IAAAA;AAApB,GAA+B;AAG3C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMW,WAAW,GAAG,MAAM;AACxBJ,IAAAA,MAAM,GAAGC,SAAS,CAAC,KAAD,CAAZ,GAAsBA,SAAS,CAAC,IAAD,CAArC;AACD,GAFD;;AAIA,QAAMI,UAAU,GAAIC,WAAD,IAAiB;AAClCX,IAAAA,SAAS,CAACU,UAAV,CAAqBR,IAAI,CAACU,EAA1B,EAA8BD,WAA9B;AACAR,IAAAA,WAAW,CAAC,QAAD,EAAWD,IAAI,CAACU,EAAhB,EAAoBD,WAApB,CAAX;AACAH,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAF,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GALD;;AAOA,QAAMO,YAAY,GAAG,MAAM;AACzBV,IAAAA,WAAW,CAAC,QAAD,EAAWD,IAAI,CAACU,EAAhB,EAAoB,IAApB,CAAX;AACAN,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GAJD;;AAOA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,WAAW,EAAEN,IAAI,CAACU,EAA7B;AAAiC,MAAA,KAAK,EAAER,KAAxC;AAAA,gBACIU,QAAD,IAAc;AACb;AAAA,4BACMA,QAAQ,CAACC,cADf;AAAA,aAEMD,QAAQ,CAACE,eAFf;AAGE,UAAA,QAAQ,EAAEF,QAAQ,CAACG,QAHrB;AAAA,oBAKGZ,MAAM,gBACL;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,SAAS,EAAC,aAFZ;AAGE,cAAA,EAAE,EAAEH,IAAI,CAACU,EAHX;AAIE,cAAA,QAAQ,EAAGM,CAAD,IAAO;AAACV,gBAAAA,YAAY,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AAA6B,eAJjD;AAKE,cAAA,OAAO,EAAGF,CAAD,IAAO;AAAC,oBAAIA,CAAC,CAACG,GAAF,KAAU,OAAd,EAAuB;AAAEX,kBAAAA,UAAU,CAACH,SAAD,CAAV;AAAuB;AAAC,eALpE;AAME,cAAA,OAAO,EAAGW,CAAD,IAAO;AAACV,gBAAAA,YAAY,CAACN,IAAI,CAACoB,IAAN,CAAZ;AAAwB,eAN3C;AAOE,cAAA,YAAY,EAAEpB,IAAI,CAACoB;AAPrB;AAAA;AAAA;AAAA;AAAA,oBADF,eAUE;AAAQ,cAAA,SAAS,EAAC,aAAlB;AAAgC,cAAA,OAAO,EAAET,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADK,gBAgBL;AAAA,oCACE;AAAQ,cAAA,SAAS,EAAG,GAAEX,IAAI,CAACoB,IAAL,IAAa,IAAb,GAAoB,YAApB,GAAmC,aAAc,EAAvE;AAA0E,cAAA,OAAO,EAAEb,WAAnF;AAAA,wBACGP,IAAI,CAACoB,IAAL,IAAa,IAAb,GAAoB,UAApB,GAAiCpB,IAAI,CAACoB;AADzC;AAAA;AAAA;AAAA;AAAA,oBADF,eAKYR,QAAQ,CAACG,QALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AArBJ;AAAA;AAAA;AAAA;AAAA;AA8BD;AAhCH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CA/DD;;GAAMhB,I;;KAAAA,I;AAiEN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nimport * as ApiClient from \"../../../../ApiClient\";\n\nimport \"../new.css\";\n\nconst ToDo = ({todo, updateState, index}) => {\n\n  \n  const [isOpen, setIsOpen] = useState(false);\n  const [updateBar, setUpdateBar] = useState(\"\");\n\n  const openOrClose = () => {\n    isOpen ? setIsOpen(false) : setIsOpen(true);\n  };\n\n  const updateTask = (updatedTask) => {\n    ApiClient.updateTask(todo.id, updatedTask);\n    updateState(\"update\", todo.id, updatedTask);\n    setUpdateBar(\"\");\n    setIsOpen(false);\n  };\n\n  const handleDelete = () => {\n    updateState(\"delete\", todo.id, null);\n    setIsOpen(false);\n    setUpdateBar(\"\");\n  };\n  \n\n  return (\n    <div>\n      <Draggable draggableId={todo.id} index={index}>\n        {(provided) => {\n          <div\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            innerRef={provided.innerRef}\n          >\n            {isOpen ? \n              <div className=\"Open-Card\"> \n                <input \n                  type=\"text\" \n                  className=\"Update-Task\"\n                  id={todo.id} \n                  onChange={(e) => {setUpdateBar(e.target.value)}}\n                  onKeyUp={(e) => {if (e.key === \"Enter\") { updateTask(updateBar) }}}\n                  onClick={(e) => {setUpdateBar(todo.task)}}\n                  defaultValue={todo.task}>\n                </input>\n                <button className=\"Delete-Task\" onClick={handleDelete}>Delete</button>\n                \n              </div>  \n              :\n\n              <div>\n                <button className={`${todo.task == null ? \"Empty-Card\" : \"Closed-Card\"}`} onClick={openOrClose}> \n                  {todo.task == null ? 'Untitled' : todo.task}    \n                </button>    \n                \n                innerRef={provided.innerRef}\n              </div>\n            }\n          </div>\n        }}\n      </Draggable>\n    </div>\n   \n  );\n};\n\nexport default ToDo;"]},"metadata":{},"sourceType":"module"}