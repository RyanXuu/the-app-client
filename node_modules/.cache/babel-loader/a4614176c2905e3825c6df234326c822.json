{"ast":null,"code":"var _jsxFileName = \"/Users/ryanxu/Documents/Coding/the-app/client/src/Pages/Apps/ToDoList/Components/ToDo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport * as ApiClient from \"../../../../ApiClient\";\nimport garbage from \"../Images/garbage.png\";\nimport arrow from \"../Images/arrow.png\";\nimport \"../new.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDo = _ref => {\n  _s();\n\n  let {\n    todo,\n    updateState,\n    index\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const [updateBar, setUpdateBar] = useState(\"\");\n\n  const openOrClose = () => {\n    isOpen ? setIsOpen(false) : setIsOpen(true);\n  };\n\n  const updateTask = updatedTask => {\n    ApiClient.updateTask(todo.id, updatedTask);\n    updateState(\"update\", todo.id, updatedTask);\n    setUpdateBar(\"\");\n    setIsOpen(false);\n  };\n\n  const handleDelete = () => {\n    updateState(\"delete\", todo.id, null);\n    setIsOpen(false);\n    setUpdateBar(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"Up-Arrow\",\n        src: arrow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"Arrow\",\n        src: arrow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Open-Card\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"Update-Task\",\n          id: todo.id,\n          onChange: e => {\n            setUpdateBar(e.target.value);\n          },\n          onKeyUp: e => {\n            if (e.key === \"Enter\") {\n              updateTask(updateBar);\n            }\n          },\n          onClick: e => {\n            setUpdateBar(todo.task);\n          },\n          defaultValue: todo.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Delete-Task\",\n          onClick: handleDelete,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: garbage,\n            height: 30\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${todo.task == null ? \"Empty-Card\" : \"Closed-Card\"}`,\n          onClick: openOrClose,\n          children: todo.task == null ? 'Untitled' : todo.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToDo, \"mtXYAphKyjax0TwiRdJPVfFUWRw=\");\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/Users/ryanxu/Documents/Coding/the-app/client/src/Pages/Apps/ToDoList/Components/ToDo.js"],"names":["React","useState","ApiClient","garbage","arrow","ToDo","todo","updateState","index","isOpen","setIsOpen","updateBar","setUpdateBar","openOrClose","updateTask","updatedTask","id","handleDelete","e","target","value","key","task"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,KAAKC,SAAZ,MAA2B,uBAA3B;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,YAAP;;;AAEA,MAAMC,IAAI,GAAG,QAAgC;AAAA;;AAAA,MAA/B;AAACC,IAAAA,IAAD;AAAOC,IAAAA,WAAP;AAAoBC,IAAAA;AAApB,GAA+B;AAG3C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMY,WAAW,GAAG,MAAM;AACxBJ,IAAAA,MAAM,GAAGC,SAAS,CAAC,KAAD,CAAZ,GAAsBA,SAAS,CAAC,IAAD,CAArC;AACD,GAFD;;AAIA,QAAMI,UAAU,GAAIC,WAAD,IAAiB;AAClCb,IAAAA,SAAS,CAACY,UAAV,CAAqBR,IAAI,CAACU,EAA1B,EAA8BD,WAA9B;AACAR,IAAAA,WAAW,CAAC,QAAD,EAAWD,IAAI,CAACU,EAAhB,EAAoBD,WAApB,CAAX;AACAH,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAF,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GALD;;AAOA,QAAMO,YAAY,GAAG,MAAM;AACzBV,IAAAA,WAAW,CAAC,QAAD,EAAWD,IAAI,CAACU,EAAhB,EAAoB,IAApB,CAAX;AACAN,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GAJD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAE,MAAhB;AAAA,4BACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAE,UAAhB;AAA4B,QAAA,GAAG,EAAER;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAE,OAAhB;AAAyB,QAAA,GAAG,EAAEA;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,gBACGK,MAAM,gBACL;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,aAFZ;AAGE,UAAA,EAAE,EAAEH,IAAI,CAACU,EAHX;AAIE,UAAA,QAAQ,EAAGE,CAAD,IAAO;AAACN,YAAAA,YAAY,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AAA6B,WAJjD;AAKE,UAAA,OAAO,EAAGF,CAAD,IAAO;AAAC,gBAAIA,CAAC,CAACG,GAAF,KAAU,OAAd,EAAuB;AAAEP,cAAAA,UAAU,CAACH,SAAD,CAAV;AAAuB;AAAC,WALpE;AAME,UAAA,OAAO,EAAGO,CAAD,IAAO;AAACN,YAAAA,YAAY,CAACN,IAAI,CAACgB,IAAN,CAAZ;AAAwB,WAN3C;AAOE,UAAA,YAAY,EAAEhB,IAAI,CAACgB;AAPrB;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,OAAO,EAAEL,YAAzC;AAAA,iCACE;AAAK,YAAA,GAAG,EAAEd,OAAV;AACE,YAAA,MAAM,EAAE;AADV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADK,gBAkBL;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAG,GAAEG,IAAI,CAACgB,IAAL,IAAa,IAAb,GAAoB,YAApB,GAAmC,aAAc,EAAvE;AAA0E,UAAA,OAAO,EAAET,WAAnF;AAAA,oBACGP,IAAI,CAACgB,IAAL,IAAa,IAAb,GAAoB,UAApB,GAAiChB,IAAI,CAACgB;AADzC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAnBJ;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CA3DD;;GAAMjB,I;;KAAAA,I;AA6DN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport * as ApiClient from \"../../../../ApiClient\";\n\nimport garbage from \"../Images/garbage.png\";\nimport arrow from \"../Images/arrow.png\";\nimport \"../new.css\";\n\nconst ToDo = ({todo, updateState, index}) => {\n\n  \n  const [isOpen, setIsOpen] = useState(false);\n  const [updateBar, setUpdateBar] = useState(\"\");\n\n  const openOrClose = () => {\n    isOpen ? setIsOpen(false) : setIsOpen(true);\n  };\n\n  const updateTask = (updatedTask) => {\n    ApiClient.updateTask(todo.id, updatedTask);\n    updateState(\"update\", todo.id, updatedTask);\n    setUpdateBar(\"\");\n    setIsOpen(false);\n  };\n\n  const handleDelete = () => {\n    updateState(\"delete\", todo.id, null);\n    setIsOpen(false);\n    setUpdateBar(\"\");\n  };\n  \n\n  return (\n    <div className={\"Todo\"}>\n      <div>\n        <img className={\"Up-Arrow\"} src={arrow} />\n        <img className={\"Arrow\"} src={arrow} />\n      </div>\n      <div>\n        {isOpen ? \n          <div className=\"Open-Card\"> \n            <input \n              type=\"text\" \n              className=\"Update-Task\"\n              id={todo.id} \n              onChange={(e) => {setUpdateBar(e.target.value)}}\n              onKeyUp={(e) => {if (e.key === \"Enter\") { updateTask(updateBar) }}}\n              onClick={(e) => {setUpdateBar(todo.task)}}\n              defaultValue={todo.task}>\n            </input>\n            <button className=\"Delete-Task\" onClick={handleDelete}>\n              <img src={garbage} \n                height={30}/>\n            </button>\n            \n          </div>  \n          :\n          <div>\n            <button className={`${todo.task == null ? \"Empty-Card\" : \"Closed-Card\"}`} onClick={openOrClose}> \n              {todo.task == null ? 'Untitled' : todo.task}    \n            </button>    \n          </div>\n        }\n      </div>\n    </div>\n   \n  );\n};\n\nexport default ToDo;"]},"metadata":{},"sourceType":"module"}