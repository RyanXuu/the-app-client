{"ast":null,"code":"var _jsxFileName = \"/Users/ryanxu/Documents/Coding/the-app/client/src/Pages/Apps/ToDoList/TheToDoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport * as ApiClient from \"../../../ApiClient\";\nimport HomeButton from \"../../../Components/HomeButton\";\nimport ListContainer from \"./Components/ListContainer\";\nimport data from \"./data.json\";\nimport \"./ToDoList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TheToDoList = () => {\n  _s();\n\n  const [taskList, setTaskList] = useState([]);\n  useEffect(() => {\n    ApiClient.getTasks().then(response => {\n      console.log(response);\n      const sortedList = response.data.sort((a, b) => a.indexCol - b.indexCol);\n      console.log(sortedList);\n      setTaskList(sortedList);\n    });\n  }, []);\n\n  const createNewTask = async () => {\n    const id = await ApiClient.createNewTask();\n    const newArray = [...taskList, {\n      id: id,\n      task: null,\n      description: null,\n      isOpen: 1\n    }];\n    setTaskList(newArray);\n  };\n\n  const handleUpdate = (id, task) => {\n    const index = taskList.findIndex(todo => todo.id === id);\n    const newArray = taskList;\n    newArray[index].task = task;\n    setTaskList(newArray);\n  };\n\n  const handleDelete = id => {\n    ApiClient.deleteTask(id);\n    const newArray = taskList.filter(todo => todo.id !== id);\n    setTaskList(newArray);\n  };\n\n  const handleShift = (id, direction) => {\n    var current = -1;\n\n    for (let i = 0; i < taskList.length; i++) {\n      if (taskList[i].id === id) {\n        current = i;\n      }\n    }\n\n    const newArray = [...taskList];\n    const temp = newArray[current];\n\n    if (direction === \"moveUp\") {\n      if (current === 0) {\n        console.log(\"first element!\");\n      } else {\n        ApiClient.swapTaskIndex(newArray[current].id, newArray[current - 1].id, current, current - 1);\n        newArray[current] = newArray[current - 1];\n        newArray[current - 1] = temp;\n        newArray[current].isOpen = 0;\n        newArray[current - 1].isOpen = 1;\n      }\n    } else {\n      if (current === taskList.length - 1) {\n        console.log(\"last element!\");\n      } else {\n        ApiClient.swapTaskIndex(newArray[current].id, newArray[current + 1].id, current, current + 1);\n        newArray[current] = newArray[current + 1];\n        newArray[current + 1] = temp;\n        newArray[current].isOpen = 0;\n        newArray[current + 1].isOpen = 1;\n      }\n    }\n\n    setTaskList(newArray);\n  };\n\n  const updateSwitch = (action, id, task) => {\n    console.log(action, id, task);\n\n    switch (action) {\n      case \"add\":\n        createNewTask();\n        break;\n\n      case \"update\":\n        handleUpdate(id, task);\n        break;\n\n      case \"delete\":\n        handleDelete(id);\n        break;\n\n      case \"moveUp\":\n        handleShift(id, \"moveUp\");\n        break;\n\n      case \"moveDown\":\n        handleShift(id, \"moveDown\");\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HomeButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Title\",\n        style: {\n          padding: 0\n        },\n        children: \"the To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => console.log(taskList),\n      children: \"a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"To-Do-Lists\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ListContainer, {\n          listName: \"TO COMPLETE\",\n          data: taskList,\n          updateState: updateSwitch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ListContainer, {\n          listName: \"FOR TODAY\",\n          data: data,\n          updateState: updateSwitch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ListContainer, {\n          listName: \"COMPLETED\",\n          data: data,\n          updateState: updateSwitch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TheToDoList, \"V/HibS7/p29J40czAjUipCO+awM=\");\n\n_c = TheToDoList;\nexport default TheToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TheToDoList\");","map":{"version":3,"sources":["/Users/ryanxu/Documents/Coding/the-app/client/src/Pages/Apps/ToDoList/TheToDoList.js"],"names":["React","useEffect","useState","ApiClient","HomeButton","ListContainer","data","TheToDoList","taskList","setTaskList","getTasks","then","response","console","log","sortedList","sort","a","b","indexCol","createNewTask","id","newArray","task","description","isOpen","handleUpdate","index","findIndex","todo","handleDelete","deleteTask","filter","handleShift","direction","current","i","length","temp","swapTaskIndex","updateSwitch","action","padding","e"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport * as ApiClient from \"../../../ApiClient\";\nimport HomeButton from \"../../../Components/HomeButton\";\nimport ListContainer from \"./Components/ListContainer\";\nimport data from \"./data.json\";\n\nimport \"./ToDoList.css\";\n\nconst TheToDoList = () => {\n\n  const [taskList, setTaskList] = useState([]);\n\n  useEffect(() => {\n    ApiClient.getTasks().then((response) => {\n      console.log(response);\n      const sortedList = response.data.sort((a, b) => a.indexCol - b.indexCol);\n      console.log(sortedList);\n      setTaskList(sortedList);\n    });\n  }, []);\n\n  const createNewTask = async () => { \n    const id = await ApiClient.createNewTask();\n    const newArray = [...taskList, {id: id, task: null, description: null, isOpen: 1}];\n    setTaskList(newArray);\n  };  \n\n  const handleUpdate = (id, task) => {\n    const index = taskList.findIndex(todo => todo.id === id)\n\n    const newArray = taskList;\n    newArray[index].task = task;\n\n    setTaskList(newArray);\n  }\n\n  const handleDelete = (id) => {\n    ApiClient.deleteTask(id);\n    const newArray = taskList.filter(todo => todo.id !== id);\n    setTaskList(newArray);\n  }\n  \n  const handleShift = (id, direction) => {\n\n    var current = -1;\n    for (let i = 0; i < taskList.length; i++) {\n      if (taskList[i].id === id) {\n        current = i;\n      }\n    }\n\n    const newArray = [...taskList];\n    const temp = newArray[current];\n    \n    if (direction === \"moveUp\") {\n      if (current === 0) {\n        console.log(\"first element!\")\n      }\n      else {\n        ApiClient.swapTaskIndex(newArray[current].id, newArray[current - 1].id, current, current - 1);\n        newArray[current] = newArray[current - 1];\n        newArray[current - 1] = temp;\n        newArray[current].isOpen = 0;\n        newArray[current - 1].isOpen = 1;\n      }   \n    }\n\n    else {\n      if (current === taskList.length - 1) {\n        console.log(\"last element!\")\n      }\n      else {\n        ApiClient.swapTaskIndex(newArray[current].id, newArray[current + 1].id, current, current + 1);\n        newArray[current] = newArray[current + 1];\n        newArray[current + 1] = temp;\n        newArray[current].isOpen = 0;\n        newArray[current + 1].isOpen = 1;\n      }\n    }\n\n    setTaskList(newArray);\n\n  }\n  const updateSwitch = (action, id, task) => {\n    console.log(action, id, task)\n    switch(action) {\n      \n      case \"add\":\n        createNewTask();\n        break;\n\n      case \"update\":\n        handleUpdate(id, task);\n        break;\n\n      case \"delete\":\n        handleDelete(id);\n        break;\n\n      case \"moveUp\":\n        handleShift(id, \"moveUp\");\n        break;\n\n      case \"moveDown\":\n        handleShift(id, \"moveDown\");\n        break;\n    }\n  }\n \n\n  return (\n    <div>\n      <HomeButton />\n      <div className=\"Header\">\n        <h1 className=\"Title\" style={{padding: 0}}>the To-Do List</h1>\n      </div>\n\n      <button onClick={(e) => console.log(taskList)}>a</button>\n\n      <div className=\"To-Do-Lists\">\n        <div>\n          <ListContainer \n            listName={\"TO COMPLETE\"}\n            data={taskList}\n            updateState={updateSwitch}\n          />\n        </div>\n        <div>\n        <ListContainer \n            listName={\"FOR TODAY\"}\n            data={data}\n            updateState={updateSwitch}\n          />\n        </div>\n        <div>\n        <ListContainer \n            listName={\"COMPLETED\"}\n            data={data}\n            updateState={updateSwitch}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TheToDoList;"]},"metadata":{},"sourceType":"module"}