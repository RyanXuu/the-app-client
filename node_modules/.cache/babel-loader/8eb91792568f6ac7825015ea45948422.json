{"ast":null,"code":"var _jsxFileName = \"/Users/ryanxu/Documents/Coding/the-app/client/src/Pages/Apps/ToDoList/Components/ToDo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport * as ApiClient from \"../../../../ApiClient\";\nimport \"../new.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDo = _ref => {\n  _s();\n\n  let {\n    todo\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const [isDeleted, setIsDeleted] = useState(false);\n  const [updateTaskInput, setUpdateTaskInput] = useState(todo.task);\n\n  const openOrClose = () => {\n    isOpen ? setIsOpen(false) : setIsOpen(true);\n  };\n\n  const deleteTask = () => {\n    ApiClient.deleteTask(todo.id);\n    setIsDeleted(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isDeleted ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Open-Card\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"updateTask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Delete-Task\",\n        onClick: deleteTask,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), console.log(todo.id)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${todo.task == null ? \"Empty-Card\" : \"Closed-Card\"}`,\n      onClick: openOrClose,\n      children: [isOpen ? 'true' : 'false', todo.task == null ? 'Untitled' : todo.task]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n/** \n*/\n\n\n_s(ToDo, \"VYBNQIKy6j+SQ/VoAj1WVt7AuzE=\");\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/Users/ryanxu/Documents/Coding/the-app/client/src/Pages/Apps/ToDoList/Components/ToDo.js"],"names":["React","useState","ApiClient","ToDo","todo","isOpen","setIsOpen","isDeleted","setIsDeleted","updateTaskInput","setUpdateTaskInput","task","openOrClose","deleteTask","id","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAO,KAAKC,SAAZ,MAA2B,uBAA3B;AAEA,OAAO,YAAP;;;AAEA,MAAMC,IAAI,GAAG,QAAY;AAAA;;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AAEvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAACG,IAAI,CAACO,IAAN,CAAtD;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBP,IAAAA,MAAM,GAAGC,SAAS,CAAC,KAAD,CAAZ,GAAsBA,SAAS,CAAC,IAAD,CAArC;AACD,GAFD;;AAIA,QAAMO,UAAU,GAAG,MAAM;AACvBX,IAAAA,SAAS,CAACW,UAAV,CAAqBT,IAAI,CAACU,EAA1B;AACAN,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAHD;;AAKA,sBACE;AAAA,cACGD,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA,YADQ,GAGNF,MAAM,gBACN;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAEQ,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGE,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACU,EAAjB,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,gBAON;AAAQ,MAAA,SAAS,EAAG,GAAEV,IAAI,CAACO,IAAL,IAAa,IAAb,GAAoB,YAApB,GAAkC,aAAc,EAAtE;AAAyE,MAAA,OAAO,EAAEC,WAAlF;AAAA,iBACGP,MAAM,GAAG,MAAH,GAAY,OADrB,EAEGD,IAAI,CAACO,IAAL,IAAa,IAAb,GAAoB,UAApB,GAAiCP,IAAI,CAACO,IAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAXN;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CApCD;AAqCA;AACA;;;GAtCMR,I;;KAAAA,I;AAuCN,eAAeA,IAAf","sourcesContent":["import React, {useState} from \"react\";\n\nimport * as ApiClient from \"../../../../ApiClient\";\n\nimport \"../new.css\";\n\nconst ToDo = ({todo}) => {\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [isDeleted, setIsDeleted] = useState(false);\n  const [updateTaskInput, setUpdateTaskInput] = useState(todo.task);\n\n  const openOrClose = () => {\n    isOpen ? setIsOpen(false) : setIsOpen(true);\n  }\n\n  const deleteTask = () => {\n    ApiClient.deleteTask(todo.id);\n    setIsDeleted(true);\n  }\n  \n  return (\n    <div>\n      {isDeleted ? \n        <div></div>\n        :\n          isOpen ? \n          <div className=\"Open-Card\"> \n            <input type=\"text\" id=\"updateTask\"></input>\n            <button className=\"Delete-Task\" onClick={deleteTask}>Delete</button>\n            {console.log(todo.id)}\n          </div>\n          :\n          <button className={`${todo.task == null ? \"Empty-Card\" :\"Closed-Card\"}`} onClick={openOrClose}> \n            {isOpen ? 'true' : 'false'} \n            {todo.task == null ? 'Untitled' : todo.task}    \n          </button>    \n      }\n      \n    </div>\n   \n  );\n};\n/** \n*/\nexport default ToDo;"]},"metadata":{},"sourceType":"module"}