{"ast":null,"code":"var _jsxFileName = \"/Users/ryanxu/Documents/Coding/the-app/client/src/Pages/Apps/ToDoList/Components/ToDo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport * as ApiClient from \"../../../../ApiClient\";\nimport garbage from \"../Images/garbage.png\";\nimport arrow from \"../Images/arrow.png\";\nimport \"../new.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDo = _ref => {\n  _s();\n\n  let {\n    todo,\n    updateState\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(todo.isOpen);\n  const [updateBar, setUpdateBar] = useState(\"\");\n  useEffect(() => {\n    setIsOpen(todo.isOpen);\n  }, [todo.isOpen]);\n\n  const updateTask = updatedTask => {\n    ApiClient.updateTask(todo.id, updatedTask);\n    updateState(\"update\", todo.id, updatedTask, todo.listId);\n    setUpdateBar(\"\");\n    setIsOpen(false);\n  };\n\n  const handleDelete = () => {\n    updateState(\"delete\", todo.id, todo.indexCol, todo.listId);\n    setIsOpen(false);\n    setUpdateBar(\"\");\n  };\n\n  const handleRearrange = direction => {\n    switch (direction) {\n      case \"Up\":\n        updateState(\"moveUp\", todo.id, null, todo.listId);\n        break;\n\n      case \"Down\":\n        updateState(\"moveDown\", todo.id, null, todo.listId);\n        break;\n\n      case \"Left\":\n        updateState(\"moveLeft\", todo.id, null, todo.listId);\n        break;\n\n      case \"Right\":\n        updateState(\"moveRight\", todo.id, null, todo.listId);\n        break;\n\n      default:\n        console.log(\"rip\");\n    }\n\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Todo\",\n    children: isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Open-Card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Arrows\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Move-Up\",\n            onClick: e => handleRearrange(\"Up\"),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"Up-Arrow\",\n              src: arrow,\n              alt: \"move up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 86\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Move-Down\",\n            onClick: e => handleRearrange(\"Down\"),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"Arrow\",\n              src: arrow,\n              alt: \"move down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 90\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"Update-Task\",\n          id: todo.id,\n          onChange: e => {\n            setUpdateBar(e.target.value);\n          },\n          onKeyUp: e => {\n            if (e.key === \"Enter\") {\n              updateTask(updateBar);\n            }\n          },\n          onClick: e => {\n            setUpdateBar(e.target.value);\n          },\n          defaultValue: todo.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Move-Left\",\n          onClick: e => handleRearrange(\"Left\"),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"Left-Arrow\",\n            src: arrow,\n            alt: \"move left\",\n            height: 35\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Move-Right\",\n          onClick: e => handleRearrange(\"Right\"),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"Right-Arrow\",\n            src: arrow,\n            alt: \"move right\",\n            height: 35\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Delete-Task\",\n          onClick: handleDelete,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: garbage,\n            alt: \"delete\",\n            height: 30\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => setTask(\"a\"),\n        children: \"a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${todo.task == null ? \"Empty-Card\" : \"Closed-Card\"}`,\n        onClick: e => setIsOpen(true),\n        children: todo.task == null ? 'Untitled' : todo.task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToDo, \"STVcMgeJM7orlYdvbgCkTXhuGlY=\");\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/Users/ryanxu/Documents/Coding/the-app/client/src/Pages/Apps/ToDoList/Components/ToDo.js"],"names":["React","useEffect","useState","ApiClient","garbage","arrow","ToDo","todo","updateState","isOpen","setIsOpen","updateBar","setUpdateBar","updateTask","updatedTask","id","listId","handleDelete","indexCol","handleRearrange","direction","console","log","display","e","target","value","key","task","setTask"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport * as ApiClient from \"../../../../ApiClient\";\n\nimport garbage from \"../Images/garbage.png\";\nimport arrow from \"../Images/arrow.png\";\nimport \"../new.css\";\n\nconst ToDo = ({todo, updateState}) => {\n\n  \n  const [isOpen, setIsOpen] = useState(todo.isOpen);\n  const [updateBar, setUpdateBar] = useState(\"\");\n\n  useEffect(() => {\n    setIsOpen(todo.isOpen);\n  }, [todo.isOpen]);\n\n  const updateTask = (updatedTask) => {\n    ApiClient.updateTask(todo.id, updatedTask);\n    updateState(\"update\", todo.id, updatedTask, todo.listId);\n    setUpdateBar(\"\");\n    setIsOpen(false);\n  };\n\n  const handleDelete = () => {\n    updateState(\"delete\", todo.id, todo.indexCol, todo.listId);\n    setIsOpen(false);\n    setUpdateBar(\"\");\n  };\n\n  const handleRearrange = (direction) => {\n    switch(direction) {\n      case \"Up\":\n        updateState(\"moveUp\", todo.id, null, todo.listId);\n        break;\n      case \"Down\":\n        updateState(\"moveDown\", todo.id, null, todo.listId);\n        break;\n      case \"Left\":\n        updateState(\"moveLeft\", todo.id, null, todo.listId);\n        break;\n      case \"Right\":\n        updateState(\"moveRight\", todo.id, null, todo.listId);\n        break;\n      default:\n        console.log(\"rip\");\n    }\n    setIsOpen(false);\n  }\n  \n\n  return (\n    <div className=\"Todo\">\n        {isOpen ? \n          <div className=\"Open-Card\"> \n            <div style={{display: \"flex\"}}>\n              <div className= {\"Arrows\"}>\n                <button className={\"Move-Up\"} onClick={(e) => handleRearrange(\"Up\")}><img className={\"Up-Arrow\"} src={arrow} alt=\"move up\"/></button>\n                <button className={\"Move-Down\"} onClick={(e) => handleRearrange(\"Down\")}><img className={\"Arrow\"} src={arrow} alt=\"move down\"/></button>\n                \n              </div>\n              <input \n                type=\"text\" \n                className=\"Update-Task\"\n                id={todo.id} \n                onChange={(e) => {setUpdateBar(e.target.value)}}\n                onKeyUp={(e) => {if (e.key === \"Enter\") { updateTask(updateBar) }}}\n                onClick={(e) => {setUpdateBar(e.target.value)}}\n                defaultValue={todo.task}>\n              </input>\n            </div>\n            <div>\n              <button className=\"Move-Left\" onClick={(e) => handleRearrange(\"Left\")}>\n                <img className=\"Left-Arrow\" src={arrow} alt=\"move left\" height={35}/>\n              </button>\n              <button className=\"Move-Right\" onClick={(e) => handleRearrange(\"Right\")}>\n                <img className=\"Right-Arrow\" src={arrow} alt=\"move right\" height={35}/>\n              </button>\n              <button className=\"Delete-Task\" onClick={handleDelete}>\n                <img src={garbage} alt=\"delete\" height={30}/>\n              </button>\n            </div>\n            <button onClick={(e) => setTask(\"a\")}>a</button>\n            \n          </div>  \n          :\n          <div>\n            <button className={`${todo.task == null ? \"Empty-Card\" : \"Closed-Card\"}`} onClick={(e) => setIsOpen(true)}> \n              {todo.task == null ? 'Untitled' : todo.task}    \n            </button>    \n          </div>\n        }\n    </div>\n   \n  );\n};\n\nexport default ToDo;"]},"metadata":{},"sourceType":"module"}