{"ast":null,"code":"import _toConsumableArray from\"/Users/ryanxu/Documents/Coding/the-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/ryanxu/Documents/Coding/the-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import*as ApiClient from\"../../../ApiClient\";import HomeButton from\"../../../Components/HomeButton\";import ListContainer from\"./Components/ListContainer\";import\"./ToDoList.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TheToDoList=function TheToDoList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),toCompleteList=_useState2[0],setToCompleteList=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),todaysList=_useState4[0],setTodaysList=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),completedList=_useState6[0],setCompletedList=_useState6[1];useEffect(function(){ApiClient.getTasks().then(function(response){console.log(response);var data=response.data;var unsortedToCompleteList=[];var unsortedTodaysList=[];var unsortedCompletedList=[];for(var i=0;i<data.length;i++){switch(data[i].listId){case 1:unsortedToCompleteList.push(data[i]);break;case 2:unsortedTodaysList.push(data[i]);break;case 3:unsortedCompletedList.push(data[i]);break;default:console.log(\"rip\");break;}}setToCompleteList(sortArray(unsortedToCompleteList));setTodaysList(sortArray(unsortedTodaysList));setCompletedList(sortArray(unsortedCompletedList));}).catch(function(err){return console.log(err);});},[]);var sortArray=function sortArray(data){var sortedList=data.sort(function(a,b){return a.indexCol-b.indexCol;});return sortedList;};var createNewTask=function createNewTask(listId){var indexCol=0;var existingTasks=[];switch(listId){case 1:indexCol=toCompleteList.length;existingTasks=_toConsumableArray(toCompleteList);break;case 2:indexCol=todaysList.length;existingTasks=_toConsumableArray(todaysList);break;case 3:indexCol=completedList.length;existingTasks=_toConsumableArray(completedList);break;default:console.log(\"rip\");break;};console.log(\"index: \"+indexCol+\" list: \"+listId);ApiClient.createNewTask(indexCol,listId).then(function(response){console.log(response);var newArray=[].concat(_toConsumableArray(existingTasks),[{id:response,task:null,description:null,indexCol:indexCol,listId:listId,isOpen:true}]);switch(listId){case 1:setToCompleteList(newArray);break;case 2:setTodaysList(newArray);break;case 3:setCompletedList(newArray);break;default:console.log(\"rip\");break;}}).catch(function(err){return console.log(err);});};var handleUpdate=function handleUpdate(id,task,listId){var newArray=getList(listId);var index=newArray.findIndex(function(todo){return todo.id===id;});newArray[index].task=task;setList(listId,newArray);};var handleDelete=function handleDelete(id,index,listId){console.log(\"id: \"+id+\" index: \"+index+\" listId: \"+listId);ApiClient.deleteTask(id,index,listId);var newArray=[];switch(listId){case 1:newArray=_toConsumableArray(toCompleteList);break;case 2:newArray=_toConsumableArray(todaysList);break;case 3:newArray=_toConsumableArray(completedList);break;default:console.log(\"rip\");break;}newArray=_toConsumableArray(newArray.filter(function(todo){return todo.id!==id;}));console.log(newArray[0]);for(var i=0;i<newArray.length;i++){if(newArray[i].indexCol>index){newArray[i].indexCol--;}}setList(listId,newArray);};var handleShift=function handleShift(id,direction,listId){var newArray=[];console.log(listId);switch(listId){case 1:newArray=_toConsumableArray(toCompleteList);break;case 2:newArray=_toConsumableArray(todaysList);break;case 3:newArray=_toConsumableArray(completedList);break;default:console.log(\"rip\");break;}var current=-1;for(var i=0;i<newArray.length;i++){if(newArray[i].id===id){current=i;}}var temp=newArray[current];if(direction===\"moveUp\"){if(current===0){console.log(\"first element!\");}else{console.log(newArray);ApiClient.swapTaskIndex(newArray[current].id,newArray[current-1].id,current,current-1);newArray[current]=newArray[current-1];newArray[current-1]=temp;newArray[current].indexCol--;newArray[current-1].indexCol++;newArray[current].isOpen=false;newArray[current-1].isOpen=false;}}else{if(current===newArray.length-1){console.log(\"last element!\");}else{ApiClient.swapTaskIndex(newArray[current].id,newArray[current+1].id,current,current+1);newArray[current]=newArray[current+1];newArray[current+1]=temp;newArray[current].indexCol++;newArray[current+1].indexCol--;console.log(newArray);for(var _i=0;_i<newArray.length;_i++){newArray[_i].isOpen=false;}console.log(newArray);}}switch(listId){case 1:setToCompleteList(newArray);break;case 2:setTodaysList(newArray);break;case 3:setCompletedList(newArray);break;default:console.log(\"rip\");break;}};var handleSideShift=function handleSideShift(id,direction,listId){var doShift=true;var list=[];switch(listId){case 1:if(direction===\"moveLeft\"){console.log(\"no such thing as list 0!\");doShift=false;break;}list=_toConsumableArray(toCompleteList);break;case 2:list=_toConsumableArray(todaysList);break;case 3:if(direction===\"moveRight\"){console.log(\"no such thing as list 4!\");doShift=false;break;}list=_toConsumableArray(completedList);break;default:console.log(\"rip\");break;}if(doShift){var otherListId=listId;direction===\"moveLeft\"?otherListId--:otherListId++;var index=list.findIndex(function(todo){return todo.id===id;});var todo=list[index];list.splice(index,1);for(var i=index;i<list.length;i++){list[i].indexCol--;}var otherList=getList(otherListId);todo.listId=otherListId;ApiClient.updateListId(id,index,listId,otherListId,otherList.length);if(index>otherList.length-1){todo.indexCol=otherList.length;otherList.push(todo);}else{for(var _i2=index;_i2<otherList.length;_i2++){otherList[_i2].indexCol++;}otherList.splice(index,0,todo);}for(var _i3=0;_i3<list.length;_i3++){list[_i3].isOpen=false;}for(var _i4=0;_i4<otherList.length;_i4++){otherList[_i4].isOpen=false;}setList(listId,list);setList(otherListId,otherList);}};var updateSwitch=function updateSwitch(action,id,task,listId){console.log(action,id,task,listId);switch(action){case\"add\":createNewTask(listId);break;case\"update\":handleUpdate(id,task,listId);break;case\"delete\":handleDelete(id,task,listId);break;case\"moveUp\":handleShift(id,\"moveUp\",listId);break;case\"moveDown\":handleShift(id,\"moveDown\",listId);break;case\"moveLeft\":handleSideShift(id,\"moveLeft\",listId);break;case\"moveRight\":handleSideShift(id,\"moveRight\",listId);break;default:console.log(\"rip\");break;}};var getList=function getList(listId){var list=[];switch(listId){case 1:list=_toConsumableArray(toCompleteList);break;case 2:list=_toConsumableArray(todaysList);break;case 3:list=_toConsumableArray(completedList);break;default:console.log(\"rip\");break;}return list;};var setList=function setList(listId,newArray){switch(listId){case 1:setToCompleteList(newArray);break;case 2:setTodaysList(newArray);break;case 3:setCompletedList(newArray);break;default:console.log(\"rip\");break;}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(HomeButton,{}),/*#__PURE__*/_jsx(\"div\",{className:\"Header\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"Title\",style:{padding:0},children:\"the To-Do List\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(e){return console.log(toCompleteList);},children:\"1\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(e){return console.log(todaysList);},children:\"2\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(e){return console.log(completedList);},children:\"3\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"To-Do-Lists\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(ListContainer,{listId:1,listName:\"TO COMPLETE\",data:toCompleteList,updateState:updateSwitch})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(ListContainer,{listId:2,listName:\"FOR TODAY\",data:todaysList,updateState:updateSwitch})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(ListContainer,{listId:3,listName:\"COMPLETED\",data:completedList,updateState:updateSwitch})})]})]});};export default TheToDoList;","map":{"version":3,"sources":["/Users/ryanxu/Documents/Coding/the-app/client/src/Pages/Apps/ToDoList/TheToDoList.js"],"names":["React","useEffect","useState","ApiClient","HomeButton","ListContainer","TheToDoList","toCompleteList","setToCompleteList","todaysList","setTodaysList","completedList","setCompletedList","getTasks","then","response","console","log","data","unsortedToCompleteList","unsortedTodaysList","unsortedCompletedList","i","length","listId","push","sortArray","catch","err","sortedList","sort","a","b","indexCol","createNewTask","existingTasks","newArray","id","task","description","isOpen","handleUpdate","getList","index","findIndex","todo","setList","handleDelete","deleteTask","filter","handleShift","direction","current","temp","swapTaskIndex","handleSideShift","doShift","list","otherListId","splice","otherList","updateListId","updateSwitch","action","padding","e"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport * as ApiClient from \"../../../ApiClient\";\nimport HomeButton from \"../../../Components/HomeButton\";\nimport ListContainer from \"./Components/ListContainer\";\n\nimport \"./ToDoList.css\";\n\nconst TheToDoList = () => {\n\n  const [toCompleteList, setToCompleteList] = useState([]);\n  const [todaysList, setTodaysList] = useState([]);\n  const [completedList, setCompletedList] = useState([]);\n\n  useEffect(() => {\n    ApiClient.getTasks().then((response) => {\n      console.log(response);\n\n      const data = response.data;\n      const unsortedToCompleteList = []\n      const unsortedTodaysList = []\n      const unsortedCompletedList = []\n\n      for (let i = 0; i < data.length; i++) {\n          switch (data[i].listId) {\n            case 1:\n              unsortedToCompleteList.push(data[i]);\n              break;\n            case 2:\n              unsortedTodaysList.push(data[i]);\n              break;\n            case 3: \n              unsortedCompletedList.push(data[i]);\n              break;\n            default: \n              console.log(\"rip\");\n              break;\n          }\n      }\n\n      setToCompleteList(sortArray(unsortedToCompleteList));\n      setTodaysList(sortArray(unsortedTodaysList));\n      setCompletedList(sortArray(unsortedCompletedList));\n    }).catch(err => console.log(err));\n  }, []);\n\n  const sortArray = (data) => {\n      const sortedList = data.sort((a, b) => a.indexCol - b.indexCol);\n      return sortedList;\n  }\n\n  const createNewTask = (listId) => { \n   \n    \n    let indexCol = 0;\n    let existingTasks = []\n\n    switch(listId) {\n      case 1:\n        indexCol = toCompleteList.length;\n        existingTasks = [...toCompleteList];\n        break;\n      case 2:\n        indexCol = todaysList.length;\n        existingTasks = [...todaysList];\n        break;\n      case 3:\n        indexCol = completedList.length;\n        existingTasks = [...completedList];\n        break;\n      default: \n        console.log(\"rip\");\n        break;\n    };\n    console.log(\"index: \" + indexCol + \" list: \" + listId);\n    ApiClient.createNewTask(indexCol, listId).then(\n      (response) => {\n\n      console.log(response);  \n      const newArray = [...existingTasks, {\n        id: response,\n        task: null, \n        description: null, \n        indexCol: indexCol,\n        listId: listId,\n        isOpen: true\n      }];\n      \n      switch(listId) {\n        case 1:\n          setToCompleteList(newArray);\n          break;\n        case 2:\n          setTodaysList(newArray);\n          break;\n        case 3:\n          setCompletedList(newArray);\n          break;\n        default: \n          console.log(\"rip\");\n          break;\n      }\n    }).catch(err => console.log(err));\n    \n  };  \n\n  const handleUpdate = (id, task, listId) => {\n    const newArray = getList(listId);\n    const index = newArray.findIndex(todo => todo.id === id)\n    newArray[index].task = task;\n    setList(listId, newArray);\n  }\n\n  const handleDelete = (id, index, listId) => {\n    console.log(\"id: \" + id + \" index: \" + index + \" listId: \" + listId)\n    ApiClient.deleteTask(id, index, listId);\n\n    let newArray = [];\n    switch(listId) {\n      case 1:\n        newArray = [...toCompleteList];\n        break;\n      case 2:\n        newArray = [...todaysList];\n        break;\n      case 3:\n        newArray = [...completedList];\n        break;\n      default: \n        console.log(\"rip\");\n        break;\n    }\n\n    newArray = [...newArray.filter(todo => todo.id !== id)];\n    console.log(newArray[0]);\n    for (let i = 0; i < newArray.length; i++) {\n      if (newArray[i].indexCol > index) {\n        newArray[i].indexCol--;\n      }\n    }\n    setList(listId, newArray);\n  }\n  \n  const handleShift = (id, direction, listId) => {\n\n    let newArray = [];\n    console.log(listId);\n    switch(listId) {\n      case 1:\n        newArray = [...toCompleteList];\n        break;\n      case 2:\n        newArray = [...todaysList];\n        break;\n      case 3:\n        newArray = [...completedList];\n        break;\n      default: \n        console.log(\"rip\");\n        break;\n    }\n\n    var current = -1;\n    for (let i = 0; i < newArray.length; i++) {\n      if (newArray[i].id === id) {\n        current = i;\n      }\n    }\n\n    \n    const temp = newArray[current];\n    \n    if (direction === \"moveUp\") {\n      if (current === 0) {\n        console.log(\"first element!\")\n      }\n      else {\n        console.log(newArray)\n        ApiClient.swapTaskIndex(newArray[current].id, newArray[current - 1].id, current, current - 1);\n        newArray[current] = newArray[current - 1];\n        newArray[current - 1] = temp;\n        newArray[current].indexCol--;\n        newArray[current - 1].indexCol++;\n        newArray[current].isOpen = false;\n        newArray[current - 1].isOpen = false;\n      }   \n    }\n\n    else {\n      if (current === newArray.length - 1) {\n        console.log(\"last element!\")\n      }\n      else {\n        ApiClient.swapTaskIndex(newArray[current].id, newArray[current + 1].id, current, current + 1);\n        newArray[current] = newArray[current + 1];\n        newArray[current + 1] = temp; \n        newArray[current].indexCol++;\n        newArray[current + 1].indexCol--;\n        console.log(newArray);\n        for (let i = 0; i < newArray.length; i++) {\n          newArray[i].isOpen = false;\n        }\n        console.log(newArray);\n      }\n    }\n\n    switch(listId) {\n      case 1:\n        setToCompleteList(newArray);\n        break;\n      case 2:\n        setTodaysList(newArray);\n        break;\n      case 3:\n        setCompletedList(newArray);\n        break;\n      default: \n        console.log(\"rip\");\n        break;\n    }\n  }\n\n  const handleSideShift = (id, direction, listId) => {\n\n    let doShift = true;\n    let list = [];\n\n    switch(listId) {\n      case 1:\n        if (direction === \"moveLeft\") {\n          console.log(\"no such thing as list 0!\");\n          doShift = false;\n          break;\n        }\n        list = [...toCompleteList];\n        break;\n\n      case 2:\n        list = [...todaysList];\n        break;\n\n      case 3:\n        if (direction === \"moveRight\") {\n          console.log(\"no such thing as list 4!\");\n          doShift = false;\n          break;\n        }\n        list = [...completedList];\n        break;\n\n      default: \n        console.log(\"rip\");\n        break;\n    }\n\n    if (doShift) {\n      let otherListId = listId;\n \n      direction === \"moveLeft\" ? otherListId-- : otherListId++;\n\n      const index = list.findIndex(todo => todo.id === id);\n      const todo = list[index];\n      list.splice(index, 1);\n      for (let i = index; i < list.length; i++) { \n        list[i].indexCol--;\n      }\n\n\n      const otherList = getList(otherListId);\n      todo.listId = otherListId;\n      \n      ApiClient.updateListId(id, index, listId, otherListId, otherList.length)\n\n      if (index > otherList.length - 1) {\n        todo.indexCol = otherList.length;\n        otherList.push(todo);\n      }\n      else {\n        for (let i = index; i < otherList.length; i++) {\n          otherList[i].indexCol++;\n        }\n        otherList.splice(index, 0, todo);\n      }\n      \n      for (let i = 0; i < list.length; i++) {\n        list[i].isOpen = false;\n      }\n      for (let i = 0; i < otherList.length; i++) {\n        otherList[i].isOpen = false;\n      }\n      \n\n      setList(listId, list);\n      setList(otherListId, otherList);\n    }\n  }\n\n  const updateSwitch = (action, id, task, listId) => {\n    console.log(action, id, task, listId)\n    switch(action) {\n      \n      case \"add\":\n        createNewTask(listId);\n        break;\n\n      case \"update\":\n        handleUpdate(id, task, listId);\n        break;\n\n      case \"delete\":\n        handleDelete(id, task, listId);\n        break;\n\n      case \"moveUp\":\n        handleShift(id, \"moveUp\", listId);\n        break;\n\n      case \"moveDown\":\n        handleShift(id, \"moveDown\", listId);\n        break;\n      \n      case \"moveLeft\":\n        handleSideShift(id, \"moveLeft\", listId);\n        break;\n\n      case \"moveRight\":\n        handleSideShift(id, \"moveRight\", listId);\n        break;\n\n      default: \n        console.log(\"rip\");\n        break;\n    }\n  }\n\n  const getList = (listId) => {\n    let list = []\n    switch(listId) {\n      case 1:\n        list = [...toCompleteList];\n        break;\n      case 2:\n        list = [...todaysList];\n        break;\n      case 3:\n        list = [...completedList];\n        break;\n      default: \n        console.log(\"rip\");\n        break;\n    }\n\n    return list;\n  }\n\n  const setList = (listId, newArray) => {\n    switch(listId) {\n      case 1:\n        setToCompleteList(newArray);\n        break;\n      case 2:\n        setTodaysList(newArray);\n        break;\n      case 3:\n        setCompletedList(newArray);\n        break;\n      default: \n        console.log(\"rip\");\n        break;\n    }\n  }\n \n\n  return (\n    <div>\n      <HomeButton />\n      <div className=\"Header\">\n        <h1 className=\"Title\" style={{padding: 0}}>the To-Do List</h1>\n      </div>\n\n      <button onClick={(e) => console.log(toCompleteList)}>1</button>\n      <button onClick={(e) => console.log(todaysList)}>2</button>\n      <button onClick={(e) => console.log(completedList)}>3</button>\n\n      <div className=\"To-Do-Lists\">\n        <div>\n          <ListContainer \n            listId={1}\n            listName={\"TO COMPLETE\"}\n            data={toCompleteList}\n            updateState={updateSwitch}\n          />\n        </div>\n        <div>\n        <ListContainer \n            listId={2}\n            listName={\"FOR TODAY\"}\n            data={todaysList}\n            updateState={updateSwitch}\n          />\n        </div>\n        <div>\n        <ListContainer \n            listId={3}\n            listName={\"COMPLETED\"}\n            data={completedList}\n            updateState={updateSwitch}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TheToDoList;"]},"metadata":{},"sourceType":"module"}