{"ast":null,"code":"var _jsxFileName = \"/Users/ryanxu/Documents/Coding/the-app/client/src/Pages/Apps/ToDoList/Components/ToDo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport * as ApiClient from \"../../../../ApiClient\";\nimport \"../new.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDo = _ref => {\n  _s();\n\n  let {\n    todo,\n    deleteTask\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const [isDeleted, setIsDeleted] = useState(false);\n  const [updateBar, setUpdateBar] = useState(\"\");\n  const [task, setTask] = useState(todo.task);\n\n  const openOrClose = () => {\n    isOpen ? setIsOpen(false) : setIsOpen(true);\n  };\n\n  const updateTask = updatedTask => {\n    ApiClient.updateTask(todo.id, updatedTask);\n    setTask(updatedTask);\n    setUpdateBar(\"\");\n    setIsOpen(false);\n  };\n\n  const handleDelete = () => {\n    props.deleteTask(todo.id);\n    setIsDeleted(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isDeleted ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Open-Card\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"Update-Task\",\n        id: todo.id,\n        onChange: e => {\n          setUpdateBar(e.target.value);\n        },\n        onKeyUp: e => {\n          if (e.key === \"Enter\") {\n            updateTask(updateBar);\n          }\n        },\n        onClick: e => {\n          setUpdateBar(task);\n        },\n        defaultValue: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Delete-Task\",\n        onClick: handleDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${task == null ? \"Empty-Card\" : \"Closed-Card\"}`,\n      onClick: openOrClose,\n      children: task == null ? 'Untitled' : task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n/** \n*/\n\n\n_s(ToDo, \"k6Aj9lck3zZWiMQfJOUg0AGENyU=\");\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/Users/ryanxu/Documents/Coding/the-app/client/src/Pages/Apps/ToDoList/Components/ToDo.js"],"names":["React","useState","ApiClient","ToDo","todo","deleteTask","isOpen","setIsOpen","isDeleted","setIsDeleted","updateBar","setUpdateBar","task","setTask","openOrClose","updateTask","updatedTask","id","handleDelete","props","e","target","value","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,KAAKC,SAAZ,MAA2B,uBAA3B;AAEA,OAAO,YAAP;;;AAEA,MAAMC,IAAI,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAuB;AAEnC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAACG,IAAI,CAACQ,IAAN,CAAhC;;AAEA,QAAME,WAAW,GAAG,MAAM;AACxBR,IAAAA,MAAM,GAAGC,SAAS,CAAC,KAAD,CAAZ,GAAsBA,SAAS,CAAC,IAAD,CAArC;AACD,GAFD;;AAIA,QAAMQ,UAAU,GAAIC,WAAD,IAAiB;AAClCd,IAAAA,SAAS,CAACa,UAAV,CAAqBX,IAAI,CAACa,EAA1B,EAA8BD,WAA9B;AACAH,IAAAA,OAAO,CAACG,WAAD,CAAP;AACAL,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAJ,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GALD;;AAOA,QAAMW,YAAY,GAAG,MAAM;AACzBC,IAAAA,KAAK,CAACd,UAAN,CAAiBD,IAAI,CAACa,EAAtB;AACAR,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAHD;;AAKA,sBACE;AAAA,cACGD,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA,YADQ,GAGNF,MAAM,gBACN;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,aAFZ;AAGE,QAAA,EAAE,EAAEF,IAAI,CAACa,EAHX;AAIE,QAAA,QAAQ,EAAGG,CAAD,IAAO;AAACT,UAAAA,YAAY,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AAA6B,SAJjD;AAKE,QAAA,OAAO,EAAGF,CAAD,IAAO;AAAC,cAAIA,CAAC,CAACG,GAAF,KAAU,OAAd,EAAuB;AAAER,YAAAA,UAAU,CAACL,SAAD,CAAV;AAAuB;AAAC,SALpE;AAME,QAAA,OAAO,EAAGU,CAAD,IAAO;AAACT,UAAAA,YAAY,CAACC,IAAD,CAAZ;AAAmB,SANtC;AAOE,QAAA,YAAY,EAAEA;AAPhB;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAEM,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,gBAcN;AAAQ,MAAA,SAAS,EAAG,GAAEN,IAAI,IAAI,IAAR,GAAe,YAAf,GAA8B,aAAc,EAAlE;AAAqE,MAAA,OAAO,EAAEE,WAA9E;AAAA,gBACGF,IAAI,IAAI,IAAR,GAAe,UAAf,GAA4BA;AAD/B;AAAA;AAAA;AAAA;AAAA;AAlBN;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAlDD;AAmDA;AACA;;;GApDMT,I;;KAAAA,I;AAqDN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport * as ApiClient from \"../../../../ApiClient\";\n\nimport \"../new.css\";\n\nconst ToDo = ({todo, deleteTask}) => {\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [isDeleted, setIsDeleted] = useState(false);\n  const [updateBar, setUpdateBar] = useState(\"\");\n  const [task, setTask] = useState(todo.task);\n\n  const openOrClose = () => {\n    isOpen ? setIsOpen(false) : setIsOpen(true);\n  };\n\n  const updateTask = (updatedTask) => {\n    ApiClient.updateTask(todo.id, updatedTask);\n    setTask(updatedTask)\n    setUpdateBar(\"\");\n    setIsOpen(false);\n  };\n\n  const handleDelete = () => {\n    props.deleteTask(todo.id)\n    setIsDeleted(true);\n  };\n  \n  return (\n    <div>\n      {isDeleted ? \n        <div></div>\n        :\n          isOpen ? \n          <div className=\"Open-Card\"> \n            <input \n              type=\"text\" \n              className=\"Update-Task\"\n              id={todo.id} \n              onChange={(e) => {setUpdateBar(e.target.value)}}\n              onKeyUp={(e) => {if (e.key === \"Enter\") { updateTask(updateBar) }}}\n              onClick={(e) => {setUpdateBar(task)}}\n              defaultValue={task}>\n            </input>\n            <button className=\"Delete-Task\" onClick={handleDelete}>Delete</button>\n          </div>\n          :\n          <button className={`${task == null ? \"Empty-Card\" : \"Closed-Card\"}`} onClick={openOrClose}> \n            {task == null ? 'Untitled' : task}    \n          </button>    \n      }\n      \n    </div>\n   \n  );\n};\n/** \n*/\nexport default ToDo;"]},"metadata":{},"sourceType":"module"}